"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/S6dWZf3vIrj
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

import { useEffect, useState } from "react";
import { useSearchParams, usePathname } from "next/navigation";
import { useRouter } from "next/navigation";
import { Input } from "../ui/input";
import { Label } from "../ui/label";

export function ReleaseDateFilter() {
    const searchParam = useSearchParams();
    const [startDate, setStartDate] = useState<string>(
        searchParam.get("startDate") || ""
    );
    const [endDate, setEndDate] = useState<string>(
        searchParam.get("startDate") || ""
    );

    const pathname = usePathname();
    const { push } = useRouter();

    useEffect(() => {
        setStartDate(searchParam.get("startDate") || "");
        setEndDate(searchParam.get("endDate") || "");
    }, [searchParam]);

    function handleAdd(
        value: string | undefined,
        type: "startDate" | "endDate"
    ) {
        const params = new URLSearchParams(searchParam);
        const searchValue = value;

        if (searchValue) {
            params.set(type, searchValue);
        } else {
            params.set(type, "");
            params.delete(type);
        }
        push(`${pathname}?${params.toString()}`);
    }

    return (
        <form className="flex items-center gap-4 justify-center flex-col sm:flex-row">
            <div className="flex items-center gap-2">
                <Label htmlFor="startDate">Start:</Label>
                <Input
                    name="startDate"
                    type="date"
                    value={startDate}
                    onChange={(e) => {
                        setStartDate(e.target.value);
                        handleAdd(e.target.value, "startDate");
                    }}
                />
            </div>
            <div className="flex items-center gap-2">
                <Label htmlFor="endDate">End:</Label>
                <Input
                    name="endDate"
                    type="date"
                    value={endDate}
                    onChange={(e) => {
                        setEndDate(e.target.value);
                        handleAdd(e.target.value, "endDate");
                    }}
                />
            </div>
        </form>
    );
}
